{"version":3,"sources":["components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","cityName","setCityName","stateName","setStateName","mainTemp","setMainTemp","maxTemp","setMaxTemp","minTemp","setMinTemp","humidity","setHumidity","windSpeed","setWindSpeed","windDeg","setWindDeg","setIcon","weatherResults","setWeatherResults","weatherDescription","setDescription","REACT_APP_API_KEY","process","e","a","preventDefault","axios","get","replace","data","main","temp","temp_min","temp_max","weather","wind","speed","deg","icon","description","Math","round","processDescription","split","map","word","toUpperCase","join","className","alt","src","useEffect","weatherItems","text","value","style","transform","processWind","name","type","onChange","target","onClick","getWeather","item","index","href","library","add","fab","fas","App","document","title","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f5075638.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nlibrary.add(fab, fas);\r\n\r\nexport default function Home() {\r\n  const [cityName, setCityName] = useState(\"Enter a city name\");\r\n  const [stateName, setStateName] = useState(\"AL\");\r\n  const [mainTemp, setMainTemp] = useState(\"Weather Main\");\r\n  const [maxTemp, setMaxTemp] = useState(\"\");\r\n  const [minTemp, setMinTemp] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  const [windSpeed, setWindSpeed] = useState(\"\");\r\n  const [windDeg, setWindDeg] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [weatherResults, setWeatherResults] = useState(false);\r\n  const [weatherDescription, setDescription] = useState(\"Weather Description\");\r\n  const { REACT_APP_API_KEY } = process.env;\r\n\r\n  function handleClick(e) {\r\n    e.target.value = \"\";\r\n  }\r\n\r\n  async function getWeather(e) {\r\n    setWeatherResults(false);\r\n    e.preventDefault();\r\n    const {\r\n      data: {\r\n        main: { temp, temp_min, temp_max, humidity },\r\n        weather,\r\n        wind: { speed, deg },\r\n      },\r\n    } = await axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName.replace(\r\n        \" \",\r\n        \"&nbsp;\"\r\n      )},${stateName},USA&units=imperial&appid=${REACT_APP_API_KEY}`\r\n    );\r\n    const { icon, description } = weather[0];\r\n    setMainTemp(temp);\r\n    setMaxTemp(temp_max);\r\n    setMinTemp(temp_min);\r\n    setHumidity(`${humidity}%`);\r\n    setWindSpeed(`${Math.round(speed)}mph`);\r\n    setWindDeg(deg);\r\n    setIcon(icon);\r\n    setDescription(processDescription(icon, description));\r\n    setWeatherResults(true);\r\n  }\r\n\r\n  function processDescription(icon, description) {\r\n    description = description\r\n      .split(\" \")\r\n      .map((word) => {\r\n        return word.replace(word[0], word[0].toUpperCase());\r\n      })\r\n      .join(\" \");\r\n    return (\r\n      <div className=\"condition-con\">\r\n        <img\r\n          alt=\"weather-icon\"\r\n          className=\"weather-icon\"\r\n          src={`http://openweathermap.org/img/wn/${icon}.png`}\r\n        ></img>\r\n        <span>{description}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function processWind(windDeg) {\r\n    return (\r\n      <FontAwesomeIcon\r\n        className=\"windDir\"\r\n        style={{ transform: `rotate(${windDeg}deg)` }}\r\n        icon={[\"fa\", \"long-arrow-alt-up\"]}\r\n      ></FontAwesomeIcon>\r\n    );\r\n  }\r\n  useEffect(() => {});\r\n  const weatherItems = [\r\n    { text: \"Conditions:\", value: weatherDescription },\r\n    { text: \"Current:\", value: mainTemp },\r\n    { text: \"Max\", value: maxTemp },\r\n    { text: \"Min\", value: minTemp },\r\n    { text: \"Humidity\", value: humidity },\r\n    {\r\n      text: \"Wind\",\r\n      value: [windSpeed, processWind(windDeg)],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-con\">\r\n        <h1 className=\"chooseCity\">\r\n          Enter a U.S. city and state to retrieve the weather\r\n        </h1>\r\n        <div className=\"inputGroup\">\r\n          <input\r\n            name=\"city\"\r\n            type=\"text\"\r\n            className=\"cityRequest\"\r\n            value={cityName}\r\n            onChange={(e) => setCityName(e.target.value)}\r\n            onClick={handleClick}\r\n          />\r\n          <select\r\n            name=\"state\"\r\n            type=\"text\"\r\n            className=\"stateRequest\"\r\n            value={stateName}\r\n            onChange={(e) => setStateName(e.target.value)}\r\n          >\r\n            <option value=\"AL\">AL</option>\r\n            <option value=\"AK\">AK</option>\r\n            <option value=\"AR\">AR</option>\r\n            <option value=\"AZ\">AZ</option>\r\n            <option value=\"CA\">CA</option>\r\n            <option value=\"CO\">CO</option>\r\n            <option value=\"CT\">CT</option>\r\n            <option value=\"DC\">DC</option>\r\n            <option value=\"DE\">DE</option>\r\n            <option value=\"FL\">FL</option>\r\n            <option value=\"GA\">GA</option>\r\n            <option value=\"HI\">HI</option>\r\n            <option value=\"IA\">IA</option>\r\n            <option value=\"ID\">ID</option>\r\n            <option value=\"IL\">IL</option>\r\n            <option value=\"IN\">IN</option>\r\n            <option value=\"KS\">KS</option>\r\n            <option value=\"KY\">KY</option>\r\n            <option value=\"LA\">LA</option>\r\n            <option value=\"MA\">MA</option>\r\n            <option value=\"MD\">MD</option>\r\n            <option value=\"ME\">ME</option>\r\n            <option value=\"MI\">MI</option>\r\n            <option value=\"MN\">MN</option>\r\n            <option value=\"MO\">MO</option>\r\n            <option value=\"MS\">MS</option>\r\n            <option value=\"MT\">MT</option>\r\n            <option value=\"NC\">NC</option>\r\n            <option value=\"NE\">NE</option>\r\n            <option value=\"NH\">NH</option>\r\n            <option value=\"NJ\">NJ</option>\r\n            <option value=\"NM\">NM</option>\r\n            <option value=\"NV\">NV</option>\r\n            <option value=\"NY\">NY</option>\r\n            <option value=\"ND\">ND</option>\r\n            <option value=\"OH\">OH</option>\r\n            <option value=\"OK\">OK</option>\r\n            <option value=\"OR\">OR</option>\r\n            <option value=\"PA\">PA</option>\r\n            <option value=\"RI\">RI</option>\r\n            <option value=\"SC\">SC</option>\r\n            <option value=\"SD\">SD</option>\r\n            <option value=\"TN\">TN</option>\r\n            <option value=\"TX\">TX</option>\r\n            <option value=\"UT\">UT</option>\r\n            <option value=\"VT\">VT</option>\r\n            <option value=\"VA\">VA</option>\r\n            <option value=\"WA\">WA</option>\r\n            <option value=\"WI\">WI</option>\r\n            <option value=\"WV\">WV</option>\r\n            <option value=\"WY\">WY</option>\r\n          </select>\r\n          <button className=\"submit\" onClick={(e) => getWeather(e)}>\r\n            Get Weather\r\n          </button>\r\n        </div>\r\n        {weatherResults && (\r\n          <div className=\"outputGroup\">\r\n            <ul className=\"outputCats\">\r\n              {weatherItems.map((item, index) => {\r\n                return <li key={index}>{item.text}</li>;\r\n              })}\r\n            </ul>\r\n            <ul className=\"weatherOutput\">\r\n              {weatherItems.map((item, index) => {\r\n                return <li key={index}>{item.value}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        <div className=\"openWeather\">\r\n          <span>\r\n            Data powered by{\" \"}\r\n            <a href=\"https://openweathermap.org/\">openweathermap.org</a> API\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  NavLink,\n} from \"react-router-dom\";\nimport Home from \"./components/home/home\";\n// const { API_KEY } = process.env;\n// import { API_KEY } from \"./config/.env\";\n// import API_KEY\n// import { API_KEY } from \"/config/process.env\";\n\nfunction App() {\n  document.title = \"Weather App\";\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Home}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}